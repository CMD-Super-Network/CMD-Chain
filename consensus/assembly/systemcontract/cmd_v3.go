package systemcontract

import (
	// "bytes"
	// "errors"
	// "github.com/ethereum/go-ethereum/accounts/abi"

	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	// "sort"
)

const (
	cmdV3Code = "0x608060405234801561001057600080fd5b50600436106101fa5760003560e01c80637e30e9861161011a578063bfd1a8a1116100ad578063cd5c53421161007c578063cd5c534214610271578063db78dd281461036d578063efd8d8e214610392578063f26fdb291461039a578063f342da33146103a2576101fa565b8063bfd1a8a114610336578063bfd25ce81461033e578063c7e4b96414610346578063c967f90f1461034e576101fa565b8063a0e8ff66116100e9578063a0e8ff6614610316578063a6943ab21461031e578063b3c77d8014610326578063be6456921461032e576101fa565b80637e30e986146102f6578063811b0b39146102fe578063817da0fd1461030657806396c7cd671461030e576101fa565b8063308fe582116101925780633a73c881116101615780633a73c881146102d65780636233be5d146102de578063667dd61d146102e657806367105148146102ee576101fa565b8063308fe582146102a157806330f3f0db146102a9578063399a87eb146102c65780633a061bd3146102ce576101fa565b8063158ef93e116101ce578063158ef93e1461024d5780631b5e358c146102695780631d681516146102715780632faf0e8014610279576101fa565b80627ad093146101ff578063079982a2146102195780630aa018841461023d5780630cc06e2b14610245575b600080fd5b6102076103aa565b60408051918252519081900360200190f35b6102216103b0565b604080516001600160a01b039092168252519081900360200190f35b6102216103b6565b6102076103bc565b6102556103ca565b604080519115158252519081900360200190f35b6102216103d3565b6102076103e2565b61029f6004803603602081101561028f57600080fd5b50356001600160a01b03166103e8565b005b610221610472565b61029f600480360360208110156102bf57600080fd5b5035610478565b61022161053c565b610221610542565b610207610556565b61022161055d565b61020761056c565b610221610573565b610221610579565b61022161057f565b610221610585565b61020761058b565b61020761059b565b6102216105ab565b6102216105b1565b6102076105c9565b6102216105d8565b6102076105de565b6102216105ee565b6103566105fd565b6040805161ffff9092168252519081900360200190f35b610375610602565b6040805167ffffffffffffffff9092168252519081900360200190f35b610375610609565b61020761060e565b61022161061c565b61708081565b61f00581565b61a00181565b690a968163f0a57b40000081565b60005460ff1681565b6001546001600160a01b031681565b6105b481565b3373d1a4e4fbc69e17cabb96fd0d45cf98889b85034714610450576040805162461bcd60e51b815260206004820152601b60248201527f6f6e6c7920676f766e65726e6163652063616e206f7065726174650000000000604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61f00781565b3361f008148061049257506003546001600160a01b031633145b6104d9576040805162461bcd60e51b815260206004820152601360248201527253797374656d436f6e7472616374204f6e6c7960681b604482015290519081900360640190fd5b61f0076001600160a01b03166330f3f0db826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b5050505050565b61f00881565b60005461010090046001600160a01b031681565b6206978081565b6002546001600160a01b031681565b620d2f0081565b61f00b81565b61f00981565b61a00281565b61f00381565b6b0d92289838d21a996800000081565b6b015b6a759f4835dc2400000081565b61f00681565b73d1a4e4fbc69e17cabb96fd0d45cf98889b85034781565b6a0422ca8b0a00a42500000081565b61f00a81565b6b07fdacf155df27a328c0000081565b6003546001600160a01b031681565b603381565b6201518081565b60c881565b693ceab05409db274d269381565b61f0048156fea26469706673582212202352503c0ef2ae690a4eb3dbc105621940e4452130b49a0fae1eaf538afc387a64736f6c634300060c0033"
)

type forkCMDV3 struct {
}

func (f *forkCMDV3) GetName() string {
	return CMDV3ContractName
}

func (f *forkCMDV3) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(cmdV3Code)

	//write code to sys contract
	state.SetCode(CMDV3ContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", CMDV3ContractAddr.String(), "code", cmdV3Code)

	return
}

func (f *forkCMDV3) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {

	// method := "initialize"
	// data, err := GetInteractiveABI()[CMDV3ContractName].Pack(method)
	// if err != nil {
	// 	log.Error("Can't pack data for initialize", "error", err)
	// 	return err
	// }

	// msg := types.NewMessage(header.Coinbase, &CMDV3ContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, false)
	// _, err = caller.ExecuteMsg(msg, state, header, chainContext, config)

	return
}
