package systemcontract

import (
	// "bytes"
	// "errors"
	// "github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/assembly/caller"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	"math"
	"math/big"
	// "sort"
)

const (
	punishV2Code = "0x608060405234801561001057600080fd5b50600436106102105760003560e01c8063817da0fd11610125578063cb1ea725116100ad578063e0d8ea531161007c578063e0d8ea53146103ce578063ea7221a1146103d6578063efd8d8e2146103fc578063f26fdb2914610404578063f62af26c1461040c57610210565b8063cb1ea7251461037c578063cd5c534214610384578063d93d2cb91461038c578063db78dd28146103a957610210565b8063b3c77d80116100f4578063b3c77d801461033d578063be64569214610345578063bfd25ce81461034d578063c7e4b96414610355578063c967f90f1461035d57610210565b8063817da0fd1461031d57806396c7cd6714610325578063a0e8ff661461032d578063a1a7536b1461033557610210565b80633a061bd3116101a857806363e1d4511161017757806363e1d451146102d5578063667dd61d146102fb5780636710514814610303578063811b0b391461030b5780638129fc1c1461031357610210565b80633a061bd3146102b55780633a73c881146102bd57806344c1aa99146102c55780636233be5d146102cd57610210565b80631b5e358c116101e45780631b5e358c146102775780631d6815161461027f5780632897183d1461028757806332f3c17f1461028f57610210565b80627ad093146102155780630aa018841461022f5780630cc06e2b14610253578063158ef93e1461025b575b600080fd5b61021d610429565b60408051918252519081900360200190f35b61023761042f565b604080516001600160a01b039092168252519081900360200190f35b61021d610435565b610263610443565b604080519115158252519081900360200190f35b61023761044c565b61021d610452565b61021d610458565b61021d600480360360208110156102a557600080fd5b50356001600160a01b031661045e565b610237610479565b61021d61047f565b61021d610486565b61023761048c565b610263600480360360208110156102eb57600080fd5b50356001600160a01b0316610492565b61021d6106be565b6102376106c5565b6102376106cb565b61031b6106d1565b005b610237610754565b61021d61075a565b61021d61076a565b61021d61077a565b61023761077f565b61021d610797565b61021d6107a6565b6102376107b6565b6103656107ca565b6040805161ffff9092168252519081900360200190f35b61021d6107cf565b61021d6107d5565b61031b600480360360208110156103a257600080fd5b50356107da565b6103b1610a7d565b6040805167ffffffffffffffff9092168252519081900360200190f35b61021d610a84565b61031b600480360360208110156103ec57600080fd5b50356001600160a01b0316610a8a565b6103b1610429565b61021d610dc4565b6102376004803603602081101561042257600080fd5b5035610dd2565b61708081565b61a00181565b690a968163f0a57b40000081565b60005460ff1681565b61f00581565b6105b481565b60035481565b6001600160a01b031660009081526005602052604090205490565b61f00481565b6206978081565b60025481565b61f00681565b6000805460ff166104d9576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b604482015290519081900360640190fd5b3361f0041461052f576040805162461bcd60e51b815260206004820152601860248201527f56616c696461746f727320636f6e7472616374206f6e6c790000000000000000604482015290519081900360640190fd5b6001600160a01b03821660009081526005602052604090205415610567576001600160a01b0382166000908152600560205260408120555b6001600160a01b03821660009081526005602052604090206002015460ff168015610593575060065415155b156106b6576006546001600160a01b0383166000908152600560205260409020600101546000199091011461065d57600680546000919060001981019081106105d857fe5b60009182526020808320909101546001600160a01b038681168452600590925260409092206001015460068054929093169350839291811061061657fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558583168252600590526040808220600190810154949093168252902001555b600680548061066857fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038416825260059052604081206001810191909155600201805460ff191690555b506001919050565b620d2f0081565b61f00781565b61a00281565b60005460ff161561071f576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600480546001600160a01b03191661f0041790556018600181815560306002556003919091556000805460ff19169091179055565b61f00381565b6b0d92289838d21a996800000081565b6b015b6a759f4835dc2400000081565b600181565b73d1a4e4fbc69e17cabb96fd0d45cf98889b85034781565b6a0422ca8b0a00a42500000081565b6b07fdacf155df27a328c0000081565b60005461010090046001600160a01b031681565b603381565b60015481565b603c81565b33411461081b576040805162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b604482015290519081900360640190fd5b4360009081526008602052604090205460ff1615610874576040805162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48191958dc99585cd959607a1b604482015290519081900360640190fd5b60005460ff166108ba576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b604482015290519081900360640190fd5b808043816108c457fe5b061561090a576040805162461bcd60e51b815260206004820152601060248201526f426c6f636b2065706f6368206f6e6c7960801b604482015290519081900360640190fd5b436000908152600860205260409020805460ff1916600117905560065461093057610a79565b60005b600654811015610a4e576003546002548161094a57fe5b04600560006006848154811061095c57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020541115610a0d576003546002548161099457fe5b0460056000600684815481106109a657fe5b60009182526020808320909101546001600160a01b031683528201929092526040018120546006805493909103926005929190859081106109e357fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902055610a46565b60006005600060068481548110610a2057fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020555b600101610933565b506040517f181d51be54e8e8eaca6eae0eab32d4162099236bd519e7238d015d0870db464190600090a15b5050565b6201518081565b60065490565b334114610acb576040805162461bcd60e51b815260206004820152600a6024820152694d696e6572206f6e6c7960b01b604482015290519081900360640190fd5b60005460ff16610b11576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081a5b9a5d081e595d60a21b604482015290519081900360640190fd5b4360009081526007602052604090205460ff1615610b69576040805162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c1d5b9a5cda195960821b604482015290519081900360640190fd5b436000908152600760209081526040808320805460ff191660011790556001600160a01b0384168352600590915290206002015460ff16610c1257600680546001600160a01b038316600081815260056020526040812060018082018590558085019095557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930180546001600160a01b0319168317905552600201805460ff191690911790555b6001600160a01b03811660009081526005602052604090208054600101908190556002549081610c3e57fe5b06610cdd57600460009054906101000a90046001600160a01b03166001600160a01b0316632566392f826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015610ca757600080fd5b505af1158015610cbb573d6000803e3d6000fd5b5050506001600160a01b03821660009081526005602052604081205550610d82565b6001546001600160a01b03821660009081526005602052604090205481610d0057fe5b06610d8257600460009054906101000a90046001600160a01b03166001600160a01b0316635dd09590826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015610d6957600080fd5b505af1158015610d7d573d6000803e3d6000fd5b505050505b6040805142815290516001600160a01b038316917f770e0cca42c35d00240986ce8d3ed438be04663c91dac6576b79537d7c180f1e919081900360200190a250565b693ceab05409db274d269381565b60068181548110610ddf57fe5b6000918252602090912001546001600160a01b031690508156fea2646970667358221220cc3ab8c15bb870ed75d15cdcd4cce304e589c56d75d137465c6f5156d6bae12d64736f6c634300060c0033"
)

type forkPunishV2 struct {

}


func (f * forkPunishV2) GetName() string{
	return PunishV2ContractName
}


func (f *forkPunishV2) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(punishV2Code)

	//write code to sys contract
	state.SetCode(PunishV2ContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", PunishV2ContractAddr.String(), "code", punishV2Code)

	return
}

func (f *forkPunishV2) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {

	method := "initialize"
	data, err := GetInteractiveABI()[PunishV2ContractName].Pack(method)
	if err != nil {
		log.Error("Can't pack data for initialize", "error", err)
		return err
	}

	msg := types.NewMessage(header.Coinbase, &PunishV2ContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, false)
	_, err = caller.ExecuteMsg(msg, state, header, chainContext, config)

	return
}